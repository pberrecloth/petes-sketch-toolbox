@import './libraries/SketchConfig.cocoascript'

// Default keys for NSUserDefaults.
var selectedArtboardKey = "SketchNavigatorSelectedArtboardKey"
var previousArtboardKey = "SketchNavigatorPreviousArtboardKey"

// Callback for navigate action.
var SketchNavigatorNavigate = function(context, jumpback) {
  var jumpback = jumpback || false
  var document = context.document

  // Show an error message if document has no artboards.
  if (!document.hasArtboards()) {
    [document showMessage:"No artboards found."]
    return
  }

  // Build a tree of pages and artboards from the document.
  var tree = SketchNavigator.getTreeFromDocument(document)

  // Get combox values as "page: artboard".
  var comboxBoxValues = SketchNavigator.buildComboxBoxValuesFromTree(tree)

  // Get the default index.
  var defaultSelectedIndex = SketchConfig.get(selectedArtboardKey)
  if (defaultSelectedIndex === nil || defaultSelectedIndex > comboxBoxValues.length - 1) {
    defaultSelectedIndex = 0
  }

  // Get the previous index.
  var selectedIndex = SketchConfig.get(previousArtboardKey)
  if (selectedIndex === nil || selectedIndex > comboxBoxValues.length - 1) {
    selectedIndex = 0
  }

  // Show the selector and get selected artboard.
  if (!jumpback) {
    var selectedComboxBoxValue = SketchNavigator.showArtboardSelector("Navigate", "Select an artboard", comboxBoxValues, selectedIndex)
    if (selectedComboxBoxValue !== null) {
      selectedIndex = selectedComboxBoxValue.indexOfSelectedItem()
    }
  }

  if (selectedIndex >= 0) {
    var flattenedTree = SketchNavigator.flattenTree(tree)
    var targetValue = comboxBoxValues[selectedIndex]
    var target = flattenedTree[targetValue]

    // Save to defaults.
    SketchConfig.set(selectedArtboardKey, selectedIndex);
    SketchConfig.set(previousArtboardKey, defaultSelectedIndex);

    // Navigate to target.
    SketchNavigator.navigateToArtboardOnPageInDocument(target["artboard"], target["page"], document, !jumpback)

    // Show a message if jumped back.
    if (jumpback) {
      [document showMessage:"Jumped to " + targetValue]
    }
  }
};

// Callback for jump back action.
var SketchNavigatorJumpBack = function(context) {
  SketchNavigatorNavigate(context, true)
}

// Sketch Navigator.
var SketchNavigator = {

  // Builds a tree of pages and artboards from the document.
  getTreeFromDocument: function(document) {
    var tree = {}

    var pages = document.pages()
    for (var i = 0; i < pages.count(); i++) {
      var currentPage = pages.objectAtIndex(i)
      tree[currentPage.name()] = {
        page: currentPage,
        artboards: currentPage.artboards()
      }
    }

    return tree
  },

  // Helper to flatten a tree using "page: artboard" as index.
  flattenTree: function(tree) {
    var flattenedTree = {}
    for (var name in tree) {
      // Get the page.
      var page = tree[name]["page"]

      // Add artboards.
      var artboards = tree[name]["artboards"]
      var loop = artboards.objectEnumerator()
      while (artboard = loop.nextObject()) {
        flattenedTree[name + ": " + artboard.name()] = {
          page: page,
          artboard: artboard
        }
      }
    }

    return flattenedTree
  },

  // Navigates to an artboard.
  navigateToArtboardOnPageInDocument: function(artboard, page, document, zoom) {
    var zoom = zoom || false

    var view = document.currentView()
    document.setCurrentPage(page)

    if (zoom) {
      // Create a rect from artboard dimensions to zoom to.
      var padding = 0.050
      var rect = artboard.rect()
      rect.origin.x -= rect.size.width * padding
      rect.origin.y -= rect.size.height * padding
      rect.size.width *= 1 + padding * 2
      rect.size.height *= 1 + padding * 2
      view.zoomToFitRect(rect)
    }
  },

  // Builds a comboxBox friendly array from tree.
  buildComboxBoxValuesFromTree: function(tree) {
    var values = []

    for (var name in tree) {
      // Add artboards.
      var artboards = tree[name]["artboards"]
      var loop = artboards.reverseObjectEnumerator()
      while (artboard = loop.nextObject()) {
        values.push(name + ": " + artboard.name())
      }
    }

    return values
  },

  // Helper to display an alert window with a comboxbos.
  showArtboardSelector: function(title, description, comboxBoxItems, selectedComboxBoxIndex) {
    // Create an alert view.
    var alert = COSAlertWindow.new()
    alert.setIcon(nil)
    alert.addButtonWithTitle('Go')
    alert.addButtonWithTitle('Cancel')
    alert.setMessageText(title)
    alert.setInformativeText(description)

    // Create a combobox.
    var comboxBoxView = [[NSComboBox alloc] initWithFrame:NSMakeRect(0, 0, 300, 28)]
    comboxBoxView.completes = true
    [comboxBoxView addItemsWithObjectValues:comboxBoxItems]
    [comboxBoxView selectItemAtIndex:selectedComboxBoxIndex]
    alert.addAccessoryView(comboxBoxView)

    var userInput = alert.runModal()
    if(userInput == "1000") {
      return alert.viewAtIndex(0)
    }

    return nil
  }
}
